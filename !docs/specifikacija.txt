========================================================================================
+ komponente
========================================================================================


+ stranice
----------------------------------------
+ pocetna            # sadrzi i obavestenja
+ studiranje         # sadrzi filter za tip studija -- osnovne/master, si/rti/ostali
+ nauka              # istrazivanja
  + projekti         # stranica sa statickim linkovima
  + ponude           # stranica sa statickim tekstom
+ kontakt            # stranica sa statickim tekstom
  + zaposleni
    + zaposlen
+ profil             # za sve ulogovane korisnike (sve osim usr)
# studiranje
  + predmet-st       # accordion informacije, predavanja, vezbe, lab, domaci, projekat, ispit;   desno obavestenja i prijave za obaveze
TODO: dovrsiti i napraviti prototip
  

+ delovi
----------------------------------------
+ navbar                 # (custom)
  + ngx-breadcrumb         # breadcrumb
  + login                  # modal
  + register               # modal
+ toast                  # toast
+ content                # router-outlet
  + search                 # (custom)
  + property-list        # (custom)
    + property             # card
  + msg-list             # (custom)
    + msg                  # (custom)
+ footer                 # text only






========================================================================================
+ baza
========================================================================================


+ korisnici
----------------------------------------
+ admin (adm)       1   -
+ agent (agn)      0N   |  <all>
+ user (usr)       0N   -
+ guest <gst>      0N


+ local storage
----------------------------------------
+ acc_id              ->acc
+ acc_type            enum( 'adm', 'agn', 'usr' )



----------------------------------------------------------------------------------------
+ agncy                                                 # agency
----------------------------------------------------------------------------------------
# ------------------------------------- <<< agency info
+ _id                 [id]                              # agency id, currently only one agency exists
+ income              ->acc
+ credit_percent      number                            # currently fixed at 20%
+ rent_percent        number
+ sale_percent        number
+ admn_id             ->acc
# ------------------------------------- <<< frontend (instance) methods
. agncy.ensureValid( acc_type, method ) => status
# ------------------------------------- <<< backend (static) methods
. get()               => status, agncy                  # (adm)
. update( new_agncy ) => status                         # (adm)



----------------------------------------------------------------------------------------
+ acc                                                   # account
----------------------------------------------------------------------------------------
# ------------------------------------- <<< account info
+ _id                 [id]
+ username            unique<string>
+ password            unique<hash>
+ firstname           string
+ lastname            string
+ email               unique<string>
# ------------------------------------- <<< user info
+ usr_photo_id        ->file|buffer< binary >|null      # u objektu se uvek cuva! ->file;   ako se ne unese koristiti default sliku
+ usr_addr_country    string|null
+ usr_addr_city       string|null
# ------------------------------------- <<< acc status
+ acc_type            enum( 'adm', 'agn', 'usr' )
+ activated_dt        date|null
+ deleted_dt          date|null
+ usr_blocked_ids     list< ->acc >|null
# ------------------------------------- <<< frontend (instance) methods
. acc.ensureValid( acc_type, method ) => status
# ------------------------------------- <<< backend (static) methods
. add( acc )            => status, acc_id|null          # <gst>,(adm)
. delete( acc_id )      => status                       # (adm)
. get( acc_id )         => status, acc|null             # (adm)
. list()                => status, list< acc >|null     # (adm): <everything>
.
. login( username, password ) => status, acc_id|null    # <all> initializes a server session
. logout()                    => status                 # <all> current user in session
.
. updateInfo( updated_acc )   => status                 # <all>
. updateStatus( updated_acc ) => status                 # (adm)
.
. blockAnother( blocked_acc_id )   => status            # <all> current user in session
. unblockAnother( blocked_acc_id ) => status            # <all> current user in session



----------------------------------------------------------------------------------------
+ prop                                                        # property, real estate, ...
----------------------------------------------------------------------------------------
# ------------------------------------- <<< property info
+ _id             [id]
+ name            string
+ addr_city       string|null
+ addr_district   string|null
+ addr_street     string|null
+ addr_streetnum  string|null
+ prop_type       enum( 'house', 'flat' )
+ flat_floornum   number|null
+ floorcnt        number
+ area_m2         number
+ roomcnt         number
+ is_furnished    bool
+ gallery         list< ->file|buffer<binary> >|null          # u objektu se uvek cuva! lista ->file;   photos, gifs and videos
+ prev_owner_id   ->acc|->agncy                               # (usr), agency
# ------------------------------------- <<< rent/sale info
+ prop_sale_type  enum( 'rent', 'sale' )
+ rent_list       list< rent >|null
  + acc_id          ->acc
  + from_dt         date
  + to_dt           date
+ rent_price      number|null
+ sale_price      number|null
+ sale_owner_id   ->acc|null                                  # (usr)
# ------------------------------------- <<< property status
+ accepted_dt     date|null
+ sold_dt         date|null
+ deleted_dt      date|null
+ is_promoted     bool
+ viewcnt         number
# ------------------------------------- <<< frontend (instance) methods
. prop.ensureValid( acc_type, method ) => status
# ------------------------------------- <<< backend (static) methods
. add( prop )           => status, prop_id|null               # <all>
. addMany( json_prop_list ) => status, list< prop_id >|null   # (adm)
. delete( acc_id )      => status                             # (adm)
. get( prop_id )        => status, prop|null                  # <gst>,<all>
. list( criteria_json ) => status, list< prop >|null          # <gst>,<all>: <everything>|promoted|city|price_range;   (usr): owned;   (ang),(adm): agency_owned|sold
.
. updateInfo( updated_acc )       => status                   # <all>
. updateStatus( updated_acc )     => status                   # (adm),(agn)
.
. rent( prop_id, from_dt, to_dt ) => status, cost|null        # (usr)
. purchase( prop_id, on_credit )  => status, cost|credit|null # (usr)
.
. getStats( criteria_json ) => status, any|null               # (adm),(agn)



----------------------------------------------------------------------------------------
+ offer                                                     # sale offer
----------------------------------------------------------------------------------------
# ------------------------------------- <<< offer info
+ _id             [id]
+ prop_id         ->prop
+ offeror_id      ->acc                                     # (usr) nalog koji daje ponudu
+ sale_offer      number|null
+ accept_dt       date|null
+ arbiter_id      ->acc|null                                # (agn),(adm) mora da potvrdi prihvacenu ponudu! (ako nije potvrdio, ponuda nije jos prihvacena)
+ reject_dt       date|null
# ------------------------------------- <<< frontend (instance) methods
. offer.ensureValid( acc_type, method ) => status
# ------------------------------------- <<< backend (static) methods
. add( offer )      => status                               # (usr)
. delete( prop_id ) => status                               # private method
. accept( offer )   => status                               # <all>
. list( prop_id )   => status, list< offer >|null           # <all>



----------------------------------------------------------------------------------------
+ conv                                                      # conversation
----------------------------------------------------------------------------------------
# ------------------------------------- <<< conversation info
+ _id             [id]
+ prop_id         ->prop                                    # koristi se za naslov poruke
+ offeror_id      ->acc                                     # (usr) koji je zainteresovan za rentiranje/kupovinu
+ msg_list        list< msg >
  + sender_id       ->acc                                   # (usr),agency_id
  + text            string
  + sent_dt         date
  + read_dt         date|null
# ------------------------------------- <<< conversation status
+ owner_arch_dt   date|null
+ offeror_arch_dt date|null
+ deleted_dt      date|null
# ------------------------------------- <<< frontend (instance) methods
. msg.ensureValid( acc_type, method ) => status
# ------------------------------------- <<< backend (static) methods
. add( conv )           => status                           # (usr)
. send( conv_id, msg )  => status, msg_id|null              # <all>
. list( criteria_json ) => status, list< conv >             # <all>: not_archived|archived



----------------------------------------------------------------------------------------
+ fs.files                                              # gridfs-stream
----------------------------------------------------------------------------------------
+ _id             [id]
+ length          number
+ chunkSize       number
+ uploadDate      date
+ filename        string
+ metadata        any
  + uploader_id     ->acc
  + deleted_dt      date|null
# ------------------------------------- <<< backend (static) methods
. add( file )    => status, file_id|null                    # private method
. delete( file ) => status                                  # private method
. get( file_id ) => status, file|null                       # private method



----------------------------------------------------------------------------------------
+ fs.chunks                                             # gridfs-stream
----------------------------------------------------------------------------------------
+ _id             [id]
+ files_id        ->file
+ n               number
+ data            buffer< binary >



----------------------------------------------------------------------------------------
+ session                                               # express-session + connect-mongo
----------------------------------------------------------------------------------------
+ _id                 [id]
+ acc_id              ->acc
+ acc_type            enum( 'adm', 'agn', 'usr' )
+ viewed_prop_list    list< ->prop >





